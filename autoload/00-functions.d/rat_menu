# vim: set ft=zsh :

print_usage() {
  print -u2 "\
\e[1mUSAGE:\e[0m rat_menu [-v arg] [-e] <options ...>

Provides an interactive selection menu

\e[1mArguments:\e[0m
\t\e[1moptions...\e[0m    The selection options (must be more than 1)
\t\e[1m-v arg\e[0m        Stores the result in \e[1marg\e[0m instead of
                          \e[1m__rat_res\e[0m
\t\e[1m-e\e[0m            Do not print result to stdout"
}

local var_name="__rat_res"
local do_echo=1
local curr_selection=1
local opts

while getopts ":v:e" opt; do
  case $opt in
    v)
      var_name=$OPTARG
      ;;
    e)
      do_echo=0
      ;;
  esac
done

shift "$(( $OPTIND - 1 ))"

if [[ $#@ < 2 ]]; then
  print_usage
  return 1
fi

opts=($@)

__rat_clean() {
  for i in {1..$#opts}; do
    print -nu2 "\e[2K\e[1F"
  done
  print -nu2 "\e[2K"
}

__rat_print_menu() {
  if [[ -z $1 ]]; then
    # Move cursor up if it's not the first print
    print -nu2 "\e[${#opts}F"
  fi

  for i in {1..$#opts}; do
    if [[ $i == $curr_selection ]]; then
      print -nu2 " > \e[1m"
    else
      print -nu2 "   "
    fi

    print -nu2 $i") "${opts[$i]}
    print -u2 "\e[0m"
  done
}

__rat_print_menu first

while read -rsk1 ch; do
  # Mmmmmm yes zsh newline fuckery
  if [[ $ch == "
" ]]; then
      # return result
      __rat_clean
      : ${(P)${var_name}::=${opts[curr_selection]}}
      (( $do_echo )) && print -n ${opts[curr_selection]}
      break
  fi

  [[ $ch != "q" ]] || {
    __rat_clean
    return 1
  }

  # TODO: Fix for more than 1-9 options
  if [[ $ch == [0-9]* ]] && (( $ch > 0 )) && (( $ch < $#opts + 1 )); then
    curr_selection=$ch
    __rat_print_menu
    continue
  fi

  [[ $ch == $(print -n "\e") ]] || continue
  read -rsk1 ch
  [[ $ch == "[" ]] || continue

  read -rsk1 ch
  case $ch in
    A)
      if [[ $curr_selection != 1 ]]; then
        (( curr_selection = $curr_selection - 1 ))
      fi
      ;;
    B)
      if [[ $curr_selection < $#opts ]]; then
        (( curr_selection = $curr_selection + 1 ))
      fi
      ;;
  esac

  __rat_print_menu
done

